<style lang="less">
    .ui-richtext-wrapper {
      line-height: 1.75em;

      .ui-richtext-text_underline {
        text-decoration: underline;
      }
    }
</style>

<template lang="wxml">
    <view class="ui-richtext-wrapper">
        <rich-text nodes="{{contentRich}}" wx:if="{{isRichTextSupported && decode}}"></rich-text>
        <text decode="nbsp" wx:else="">{{contentPlain}}</text>
    </view>
</template>

<script>
    import Wepy from 'wepy';

    export default class UIRichText extends Wepy.component {
        constructor() {
            super();
        }

        props = {
            /**
             * HTML 源代码片段。
             */
            content: {
                type: String,
                default: ''
            },

            /**
             * 是否按照富文本方式显示。
             */
            decode: {
                type: Boolean,
                default: true
            }
        };

        data = {
            isRichTextSupported: true
        };

        computed = {
            contentRich() {
                let result = String(this.content)
                    .replace(/<u.*?>(.*?)<\/u>/gi, '<span class="ui-richtext-text_underline">$1</span>');
                return this._htmlEntityDecode(result)
                    .replace(/\s+([^<>]+)(?=<)/g, (match) => match.replace(/\s+/g, '&nbsp;'));
            },

            contentPlain() {
                let result = String(this.content)
                    .replace(/<br\s*\/?>/gi, '\r\n')
                    .replace(/<p.*?>(.*?)<\/p>/gi, '$1\r\n')
                    .replace(/<\/?[^>]*>/g, '');
                return this._htmlEntityDecode(result);
            }
        };

        _htmlEntityDecode(value) {
            let result = String(value);
            /* ASCII */
            result = result
                .replace(/&amp;/g, '&')
                .replace(/&quot;/g, '"')
                .replace(/&apos;/g, '\'')
                .replace(/&lt;/g, '<')
                .replace(/&gt;/g, '>');
            /* ISO 8859-1 符号 */
            result = result
                .replace(/&nbsp;/g, ' ')
                .replace(/&iexcl;/g, '¡')
                .replace(/&cent;/g, '¢')
                .replace(/&pound;/g, '£')
                .replace(/&curren;/g, '¤')
                .replace(/&yen;/g, '¥')
                .replace(/&brvbar;/g, '¦')
                .replace(/&sect;/g, '§')
                .replace(/&uml;/g, '¨')
                .replace(/&copy;/g, '©')
                .replace(/&ordf;/g, 'ª')
                .replace(/&laquo;/g, '«')
                .replace(/&not;/g, '¬')
                .replace(/&shy;/g, '')
                .replace(/&reg;/g, '®')
                .replace(/&macr;/g, '¯')
                .replace(/&deg;/g, '°')
                .replace(/&plusmn;/g, '±')
                .replace(/&sup2;/g, '²')
                .replace(/&sup3;/g, '³')
                .replace(/&acute;/g, '´')
                .replace(/&micro;/g, 'µ')
                .replace(/&para;/g, '¶')
                .replace(/&middot;/g, '·')
                .replace(/&cedil;/g, '¸')
                .replace(/&sup1;/g, '¹')
                .replace(/&ordm;/g, 'º')
                .replace(/&raquo;/g, '»')
                .replace(/&frac14;/g, '¼')
                .replace(/&frac12;/g, '½')
                .replace(/&frac34;/g, '¾')
                .replace(/&iquest;/g, '¿')
                .replace(/&times;/g, '×')
                .replace(/&divide;/g, '÷');
            /* ISO 8859-1 字符 */
            result = result
                .replace(/&Agrave;/g, 'À')
                .replace(/&Aacute;/g, 'Á')
                .replace(/&Acirc;/g, 'Â')
                .replace(/&Atilde;/g, 'Ã')
                .replace(/&Auml;/g, 'Ä')
                .replace(/&Aring;/g, 'Å')
                .replace(/&AElig;/g, 'Æ')
                .replace(/&Ccedil;/g, 'Ç')
                .replace(/&Egrave;/g, 'È')
                .replace(/&Eacute;/g, 'É')
                .replace(/&Ecirc;/g, 'Ê')
                .replace(/&Euml;/g, 'Ë')
                .replace(/&Igrave;/g, 'Ì')
                .replace(/&Iacute;/g, 'Í')
                .replace(/&Icirc;/g, 'Î')
                .replace(/&Iuml;/g, 'Ï')
                .replace(/&ETH;/g, 'Ð')
                .replace(/&Ntilde;/g, 'Ñ')
                .replace(/&Ograve;/g, 'Ò')
                .replace(/&Oacute;/g, 'Ó')
                .replace(/&Ocirc;/g, 'Ô')
                .replace(/&Otilde;/g, 'Õ')
                .replace(/&Ouml;/g, 'Ö')
                .replace(/&Oslash;/g, 'Ø')
                .replace(/&Ugrave;/g, 'Ù')
                .replace(/&Uacute;/g, 'Ú')
                .replace(/&Ucirc;/g, 'Û')
                .replace(/&Uuml;/g, 'Ü')
                .replace(/&Yacute;/g, 'Ý')
                .replace(/&THORN;/g, 'Þ')
                .replace(/&szlig;/g, 'ß')
                .replace(/&agrave;/g, 'à')
                .replace(/&aacute;/g, 'á')
                .replace(/&acirc;/g, 'â')
                .replace(/&atilde;/g, 'ã')
                .replace(/&auml;/g, 'ä')
                .replace(/&aring;/g, 'å')
                .replace(/&aelig;/g, 'æ')
                .replace(/&ccedil;/g, 'ç')
                .replace(/&egrave;/g, 'è')
                .replace(/&eacute;/g, 'é')
                .replace(/&ecirc;/g, 'ê')
                .replace(/&euml;/g, 'ë')
                .replace(/&igrave;/g, 'ì')
                .replace(/&iacute;/g, 'í')
                .replace(/&icirc;/g, 'î')
                .replace(/&iuml;/g, 'ï')
                .replace(/&eth;/g, 'ð')
                .replace(/&ntilde;/g, 'ñ')
                .replace(/&ograve;/g, 'ò')
                .replace(/&oacute;/g, 'ó')
                .replace(/&ocirc;/g, 'ô')
                .replace(/&otilde;/g, 'õ')
                .replace(/&ouml;/g, 'ö')
                .replace(/&oslash;/g, 'ø')
                .replace(/&ugrave;/g, 'ù')
                .replace(/&uacute;/g, 'ú')
                .replace(/&ucirc;/g, 'û')
                .replace(/&uuml;/g, 'ü')
                .replace(/&yacute;/g, 'ý')
                .replace(/&thorn;/g, 'þ')
                .replace(/&yuml;/g, 'ÿ');
            /* 数学符号 */
            result = result
                .replace(/&forall;/g, '∀')
                .replace(/&part;/g, '∂')
                .replace(/&exists;/g, '∃')
                .replace(/&empty;/g, '∅')
                .replace(/&nabla;/g, '∇')
                .replace(/&isin;/g, '∈')
                .replace(/&notin;/g, '∉')
                .replace(/&ni;/g, '∋')
                .replace(/&prod;/g, '∏')
                .replace(/&sum;/g, '∑')
                .replace(/&minus;/g, '−')
                .replace(/&lowast;/g, '∗')
                .replace(/&radic;/g, '√')
                .replace(/&prop;/g, '∝')
                .replace(/&infin;/g, '∞')
                .replace(/&ang;/g, '∠')
                .replace(/&and;/g, '∧')
                .replace(/&or;/g, '∨')
                .replace(/&cap;/g, '∩')
                .replace(/&cup;/g, '∪')
                .replace(/&int;/g, '∫')
                .replace(/&there4;/g, '∴')
                .replace(/&sim;/g, '∼')
                .replace(/&cong;/g, '≅')
                .replace(/&asymp;/g, '≈')
                .replace(/&ne;/g, '≠')
                .replace(/&equiv;/g, '≡')
                .replace(/&le;/g, '≤')
                .replace(/&ge;/g, '≥')
                .replace(/&sub;/g, '⊂')
                .replace(/&sup;/g, '⊃')
                .replace(/&nsub;/g, '⊄')
                .replace(/&sube;/g, '⊆')
                .replace(/&supe;/g, '⊇')
                .replace(/&oplus;/g, '⊕')
                .replace(/&otimes;/g, '⊗')
                .replace(/&perp;/g, '⊥')
                .replace(/&sdot;/g, '⋅');
            /* 希腊字母 */
            result = result
                .replace(/&Alpha;/g, 'Α')
                .replace(/&Beta;/g, 'Β')
                .replace(/&Gamma;/g, 'Γ')
                .replace(/&Delta;/g, 'Δ')
                .replace(/&Epsilon;/g, 'Ε')
                .replace(/&Zeta;/g, 'Ζ')
                .replace(/&Eta;/g, 'Η')
                .replace(/&Theta;/g, 'Θ')
                .replace(/&Iota;/g, 'Ι')
                .replace(/&Kappa;/g, 'Κ')
                .replace(/&Lambda;/g, 'Λ')
                .replace(/&Mu;/g, 'Μ')
                .replace(/&Nu;/g, 'Ν')
                .replace(/&Xi;/g, 'Ξ')
                .replace(/&Omicron;/g, 'Ο')
                .replace(/&Pi;/g, 'Π')
                .replace(/&Rho;/g, 'Ρ')
                .replace(/&Sigma;/g, 'Σ')
                .replace(/&Tau;/g, 'Τ')
                .replace(/&Upsilon;/g, 'Υ')
                .replace(/&Phi;/g, 'Φ')
                .replace(/&Chi;/g, 'Χ')
                .replace(/&Psi;/g, 'Ψ')
                .replace(/&Omega;/g, 'Ω')
                .replace(/&alpha;/g, 'α')
                .replace(/&beta;/g, 'β')
                .replace(/&gamma;/g, 'γ')
                .replace(/&delta;/g, 'δ')
                .replace(/&epsilon;/g, 'ε')
                .replace(/&zeta;/g, 'ζ')
                .replace(/&eta;/g, 'η')
                .replace(/&theta;/g, 'θ')
                .replace(/&iota;/g, 'ι')
                .replace(/&kappa;/g, 'κ')
                .replace(/&lambda;/g, 'λ')
                .replace(/&mu;/g, 'μ')
                .replace(/&nu;/g, 'ν')
                .replace(/&xi;/g, 'ξ')
                .replace(/&omicron;/g, 'ο')
                .replace(/&pi;/g, 'π')
                .replace(/&rho;/g, 'ρ')
                .replace(/&sigmaf;/g, 'ς')
                .replace(/&sigma;/g, 'σ')
                .replace(/&tau;/g, 'τ')
                .replace(/&upsilon;/g, 'υ')
                .replace(/&phi;/g, 'φ')
                .replace(/&chi;/g, 'χ')
                .replace(/&psi;/g, 'ψ')
                .replace(/&omega;/g, 'ω')
                .replace(/&thetasym/gi, 'ϑ')
                .replace(/&upsih;/g, 'ϒ')
                .replace(/&piv;/g, 'ϖ');
            /* 其他 */
            result = result
                .replace(/&OElig;/g, 'Œ')
                .replace(/&oelig;/g, 'œ')
                .replace(/&Scaron;/g, 'Š')
                .replace(/&scaron;/g, 'š')
                .replace(/&Yuml;/g, 'Ÿ')
                .replace(/&fnof;/g, 'ƒ')
                .replace(/&circ;/g, 'ˆ')
                .replace(/&tilde;/g, '˜')
                .replace(/&ensp;/g, ' ')
                .replace(/&emsp;/g, ' ')
                .replace(/&thinsp;/g, ' ')
                .replace(/&zwnj;/g, '')
                .replace(/&zwj;/g, '')
                .replace(/&lrm;/g, '')
                .replace(/&rlm;/g, '')
                .replace(/&ndash;/g, '–')
                .replace(/&mdash;/g, '—')
                .replace(/&lsquo;/g, '‘')
                .replace(/&rsquo;/g, '’')
                .replace(/&sbquo;/g, '‚')
                .replace(/&ldquo;/g, '“')
                .replace(/&rdquo;/g, '”')
                .replace(/&bdquo;/g, '„')
                .replace(/&dagger;/g, '†')
                .replace(/&Dagger;/g, '‡')
                .replace(/&bull;/g, '•')
                .replace(/&hellip;/g, '…')
                .replace(/&permil;/g, '‰')
                .replace(/&prime;/g, '′')
                .replace(/&Prime;/g, '″')
                .replace(/&lsaquo;/g, '‹')
                .replace(/&rsaquo;/g, '›')
                .replace(/&oline;/g, '‾')
                .replace(/&euro;/g, '€')
                .replace(/&trade;/g, '™')
                .replace(/&larr;/g, '←')
                .replace(/&uarr;/g, '↑')
                .replace(/&rarr;/g, '→')
                .replace(/&darr;/g, '↓')
                .replace(/&harr;/g, '↔')
                .replace(/&crarr;/g, '↵')
                .replace(/&lceil;/g, '⌈')
                .replace(/&rceil;/g, '⌉')
                .replace(/&lfloor;/g, '⌊')
                .replace(/&rfloor;/g, '⌋')
                .replace(/&loz;/g, '⌋')
                .replace(/&spades;/g, '♠')
                .replace(/&clubs;/g, '♣')
                .replace(/&hearts;/g, '♥')
                .replace(/&diams;/g, '♦');
            return result;
        };

        ready() {
            /* for Native Component */
            this.isRichTextSupported = wx.canIUse('rich-text');
            this.$apply();
        }

        onLoad() {
            /* for Wepy Component */
            this.isRichTextSupported = wx.canIUse('rich-text');
            this.$apply();
        };
    }
</script>